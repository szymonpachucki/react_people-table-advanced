{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","PeopleFilters","setSearchParams","allCenturies","getAll","sex","get","setSexFilterActiveClass","selectedSex","classNames","setSearchCenturyClass","centuryValue","includes","centuriesAllClasses","length","setCenturyValues","clickedCentury","filter","century","className","type","placeholder","onChange","event","newQuery","target","centuries","query","Loader","PeopleTable","people","selectedPersonSlug","useParams","slug","toLowerCase","sort","order","displayedPeople","person","personName","name","motherName","fatherName","p","Math","floor","born","p1","p2","person1","person2","localeCompare","setSortColumnClasses","sortBy","setSortParam","sortParameter","map","motherSlug","find","fatherSlug","died","some","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isError","setIsError","showLoader","peopleLoaded","useEffect","getPeople","catch","Navbar","linkClass","active","isActive","peopleLink","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8d430a60.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const allCenturies = searchParams.getAll('centuries');\n  const sex = searchParams.get('sex');\n  const setSexFilterActiveClass = (selectedSex: string) => {\n    return classNames(\n      {\n        'is-active':\n          sex === selectedSex || (selectedSex === 'all' && sex === null),\n      },\n    );\n  };\n\n  const setSearchCenturyClass = (centuryValue: string) => {\n    return classNames('button', 'mr-1', {\n      'is-info': allCenturies.includes(centuryValue),\n    });\n  };\n\n  const centuriesAllClasses = classNames('button', 'is-success', {\n    'is-outlined': allCenturies.length > 0,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newQuery = event.target.value;\n\n    if (newQuery === '') {\n      searchParams.delete('query');\n    } else {\n      searchParams.set('query', newQuery);\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const setCenturyValues = (clickedCentury: string) => {\n    if (allCenturies.includes(clickedCentury)) {\n      return allCenturies.filter(century => century !== clickedCentury);\n    }\n\n    return [...allCenturies, clickedCentury];\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={setSexFilterActiveClass('all')}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={setSexFilterActiveClass('m')}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={setSexFilterActiveClass('f')}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={handleChange}\n            value={searchParams.get('query') || ''}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            <SearchLink\n              data-cy=\"century\"\n              className={setSearchCenturyClass('16')}\n              params={{ centuries: setCenturyValues('16') }}\n            >\n              16\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={setSearchCenturyClass('17')}\n              params={{ centuries: setCenturyValues('17') }}\n            >\n              17\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={setSearchCenturyClass('18')}\n              params={{ centuries: setCenturyValues('18') }}\n            >\n              18\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={setSearchCenturyClass('19')}\n              params={{ centuries: setCenturyValues('19') }}\n            >\n              19\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={setSearchCenturyClass('20')}\n              params={{ centuries: setCenturyValues('20') }}\n            >\n              20\n            </SearchLink>\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={centuriesAllClasses}\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            centuries: null,\n            sex: null,\n            query: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types/Person';\nimport { SearchLink } from './SearchLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [searchParams] = useSearchParams();\n  const { slug: selectedPersonSlug } = useParams();\n  const query = searchParams.get('query')?.toLowerCase() || '';\n  const centuries = searchParams.getAll('centuries');\n  const sex = searchParams.get('sex');\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n\n  let displayedPeople: Person[] = [...people];\n\n  if (query) {\n    displayedPeople = displayedPeople.filter((person) => {\n      const personName = person.name.toLowerCase();\n      const motherName = person.motherName?.toLowerCase() || '';\n      const fatherName = person.fatherName?.toLowerCase() || '';\n      // eslint-disable-next-line max-len\n      const personMatch = personName.includes(query) || motherName.includes(query) || fatherName.includes(query);\n\n      return personMatch;\n    });\n  }\n\n  if (centuries.length > 0 && centuries[0] !== 'any') {\n    // eslint-disable-next-line max-len\n    displayedPeople = displayedPeople.filter((p) => centuries.includes((Math.floor(p.born / 100) + 1).toString()));\n  }\n\n  if (sex) {\n    displayedPeople = displayedPeople.filter((p) => p.sex === sex);\n  }\n\n  displayedPeople.sort((p1, p2) => {\n    let [person1, person2] = [p1, p2];\n\n    if (order === 'desc') {\n      [person2, person1] = [person1, person2];\n    }\n\n    switch (sort) {\n      case 'name':\n      case 'sex':\n        return person1[sort].localeCompare(person2[sort]);\n\n      case 'died':\n      case 'born':\n        return person1[sort] - person2[sort];\n\n      default:\n        return 0;\n    }\n  });\n\n  const setSortColumnClasses = (sortBy: string) => {\n    return classNames('fas', {\n      'fa-sort': sort !== sortBy,\n    }, {\n      'fa-sort-down': sort === sortBy && order === 'desc',\n    }, {\n      'fa-sort-up': sort === sortBy && order === 'asc',\n    });\n  };\n\n  const setSortParam = (sortParameter: string) => {\n    if (!sort || sort !== sortParameter) {\n      return { sort: sortParameter, order: null };\n    }\n\n    switch (order) {\n      case 'desc':\n        return { sort: null, order: null };\n\n      default:\n        return { order: 'desc' };\n    }\n  };\n\n  return (\n    <>\n      {!displayedPeople.length ? (\n        <p>There are no people matching the current search criteria</p>\n      ) : (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Name\n                  <SearchLink\n                    className=\"is-active\"\n                    params={setSortParam('name') as Record<string, string | null>}\n                  >\n                    <span className=\"icon\">\n                      <i className={setSortColumnClasses('name')} />\n                    </span>\n                  </SearchLink>\n                </span>\n              </th>\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Sex\n                  <SearchLink\n                    className=\"is-active\"\n                    params={setSortParam('sex') as Record<string, string | null>}\n                  >\n                    <span className=\"icon\">\n                      <i className={setSortColumnClasses('sex')} />\n                    </span>\n                  </SearchLink>\n                </span>\n              </th>\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Born\n                  <SearchLink\n                    className=\"is-active\"\n                    params={setSortParam('born') as Record<string, string | null>}\n                  >\n                    <span className=\"icon\">\n                      <i className={setSortColumnClasses('born')} />\n                    </span>\n                  </SearchLink>\n                </span>\n              </th>\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Died\n                  <SearchLink\n                    className=\"is-active\"\n                    params={setSortParam('died') as Record<string, string | null>}\n                  >\n                    <span className=\"icon\">\n                      <i className={setSortColumnClasses('died')} />\n                    </span>\n                  </SearchLink>\n                </span>\n              </th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {displayedPeople.map((person) => {\n              const motherSlug = people.find((p) => p.name === person.motherName)?.slug;\n              const fatherSlug = people.find((p) => p.name === person.fatherName)?.slug;\n\n              return (\n                <tr\n                  data-cy=\"person\"\n                  key={person.slug}\n                  className={selectedPersonSlug === person.slug ? 'has-background-warning' : ''}\n                >\n                  <td>\n                    <Link\n                      to={`/people/${person.slug}/?sort=${sort}`}\n                      className={person.sex === 'f' ? 'has-text-danger' : ''}\n                    >\n                      {person.name}\n                    </Link>\n                  </td>\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n\n                  <td>\n                    {person.motherName && people.some(p => p.name === person.motherName)\n                      ? (\n                        <Link\n                          to={`/people/${motherSlug}/?sort=${sort}`}\n                          className=\"has-text-danger\"\n                        >\n                          {person.motherName}\n                        </Link>\n                      ) : person.motherName || '-'}\n                  </td>\n                  <td>\n                    {person.fatherName && people.some(p => p.name === person.fatherName)\n                      ? (\n                        <Link\n                          to={`/people/${fatherSlug}/?sort=${sort}`}\n                        >\n                          {person.fatherName}\n                        </Link>\n                      ) : person.fatherName || '-'}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\n\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [isError, setIsError] = useState(false);\n  const showLoader = people === null && !isError;\n  const peopleLoaded = !!people?.length;\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {peopleLoaded && (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {showLoader && <Loader />}\n\n              {isError && (\n                <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n              )}\n\n              {people && !people.length && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {peopleLoaded && (\n                <PeopleTable\n                  people={people}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink, useSearchParams } from 'react-router-dom';\n\ntype Active = {\n  isActive: boolean\n};\n\nexport const Navbar = () => {\n  const [searchParams] = useSearchParams();\n\n  const linkClass = (active: Active) => classNames('navbar-item', {\n    'has-background-grey-lighter': active.isActive,\n  });\n  const peopleLink = `people?${searchParams.toString()}`;\n\n  return (\n    <nav data-cy=\"nav\">\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={linkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to={peopleLink}\n            className={linkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n            <Route path=\"people\">\n              <Route\n                index\n                element={(\n                  <PeoplePage />\n                )}\n              />\n              <Route\n                path=\":slug\"\n                element={(\n                  <PeoplePage />\n                )}\n              />\n            </Route>\n            <Route\n              path=\"*\"\n              element={(\n                <h1 className=\"title\">\n                  Page not found\n                </h1>\n              )}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}